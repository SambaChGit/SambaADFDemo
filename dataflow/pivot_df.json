{
	"name": "pivot_df",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "pvtsrc"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_pivot_output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "azuresqlforDF",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Pivot1"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				}
			],
			"script": "source(output(\n\t\tProductKey as integer,\n\t\tOrderDateKey as integer,\n\t\tCustomerKey as integer,\n\t\tSalesOrderLineNumber as integer,\n\t\tEnglishProductCategoryName as string,\n\t\tEnglishProductSubcategoryName as string,\n\t\tEnglishProductName as string,\n\t\tOrderQuantity as short,\n\t\tUnitPrice as decimal(19,4),\n\t\tExtendedAmount as decimal(19,4),\n\t\tUnitPriceDiscountPct as double,\n\t\tDiscountAmount as double,\n\t\tProductStandardCost as decimal(19,4),\n\t\tTotalProductCost as decimal(19,4),\n\t\tSalesAmount as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tCarrierTrackingNumber as string,\n\t\tCustomerPONumber as string,\n\t\tOrderDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> pvtsrc\npvtsrc pivot(groupBy(prodcat = EnglishProductCategoryName),\n\tpivotBy(EnglishProductSubcategoryName),\n\tSalesAmount = sum(SalesAmount),\n\t\tTotalProdCost = sum(TotalProductCost),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot1\nPivot1 derive({SalesAmountMountain Bikes} = toDecimal(byName('SalesAmountMountain Bikes')),\n\t\t{SalesAmountRoad Bikes} = toDecimal(byName('SalesAmountRoad Bikes')),\n\t\t{TotalProdCostMountain Bikes} = toDecimal(byName('TotalProdCostMountain Bikes')),\n\t\t{TotalProdCostRoad Bikes} = toDecimal(byName('TotalProdCostRoad Bikes'))) ~> MapDrifted1\nMapDrifted1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string\n\t),\n\tpartitionFileNames:['output_pivot.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nMapDrifted1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
		}
	}
}